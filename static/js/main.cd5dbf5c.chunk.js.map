{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"wMAmDeA,EA/CK,SAACC,GAAW,IAAD,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAEnBC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAEVC,EAAe,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAOP,EAAMQ,OAEhBD,EAAKE,OAAO,GAAGC,YAAYP,EAAOD,EAAQ,CAAEK,SAC/CN,EAAS,KASb,OACI,uBAAMU,UAAU,eAAeC,SAAUR,EAAzC,UACI,uBACIO,UAAU,gBACVE,YAAY,oBACZb,MAAOA,EACPc,SAbS,SAACT,GAClBJ,EAASI,EAAMU,OAAOf,OACtBgB,YAASlB,EAAOI,IAYRU,SAAUR,IAEd,uBAAOa,QAAQ,gBAAf,SACI,sBAAMN,UAAU,eAAhB,SACI,cAACO,EAAA,EAAD,CAAiBP,UAAU,qBAGnC,uBACIQ,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHC,MAAO,CAACC,QAAQ,QAChBT,SAtBS,SAACT,GAClBK,YAAYP,EAAMD,EAAQ,CAACsB,MAAOnB,EAAMU,OAAOS,MAAOjB,KAAK,QAuBvD,wBAAQY,KAAK,SAASR,UAAU,cAAhC,SACI,cAACc,EAAA,EAAD,CAAcd,UAAU,oBC3BzBe,EAlBG,SAAC,GAAe,IAAD,EAAbC,EAAa,EAAbA,QAChB,OAAU,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAwBnB,QAAS,EAE5B,qBACIoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJpB,UAAU,gBACVW,MAAO,CAACU,MAAO,WAKvB,qBAAKrB,UAAU,UAAUW,MAAO,CAACU,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,WAAvG,SACKR,EAAQpB,QCgBN6B,EA7BM,SAAC,GAA4B,IAAD,IAA1BC,EAA0B,EAA1BA,YAAaV,EAAa,EAAbA,QAC1BW,GAAwBD,GAAeA,EAAYE,OAAOC,WAAab,EAAQY,OAAOC,SAE5F,OACI,sBAAK7B,UAAU,cAAf,UACK2B,GACG,qBACI3B,UAAU,iBACVW,MAAO,CAACmB,gBAAgB,OAAD,cAASd,QAAT,IAASA,GAAT,UAASA,EAASY,cAAlB,aAAS,EAAiBG,OAA1B,SAGvB,OAAPf,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAwBnB,QAAS,EAE1B,qBACIoB,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJpB,UAAU,gBACVW,MAAO,CAACqB,WAAYL,EAAuB,MAAM,UAGrD,qBAAK3B,UAAU,UAAUW,MAAO,CAACU,MAAO,OAAQG,gBAAiB,WAAjE,SACKR,EAAQpB,WC6ClBqC,EA9DE,SAAC9C,GAAW,IACjB+C,EAA0C/C,EAA1C+C,MAAOC,EAAmChD,EAAnCgD,WAAYC,EAAuBjD,EAAvBiD,SAAUC,EAAalD,EAAbkD,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACvB,EAASwB,GACjC,OAAOF,EAAKG,OAAOC,KAAI,SAACC,EAAOC,GAAR,aAAiBD,EAAOE,YAAc7B,EAAQN,IACjE,qBAEIV,UAAU,eACVW,MAAO,CACHU,MAAOmB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,cAASa,QAAT,IAASA,GAAT,UAASA,EAAQA,cAAjB,aAAS,EAAgBZ,OAAzB,OALvB,eACiBa,QAmCzB,OAAIN,EAGA,sBAAKtC,UAAU,YAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,aAAf,SAA6BsC,EAAKQ,QAClC,qBAAK9C,UAAU,gBAAf,SACKsC,EAAKG,OAAOC,KAAI,SAACC,GAAD,gBAAeA,EAAOA,OAAOd,kBAhCvC,WACnB,IAAMkB,EAAOC,OAAOD,KAAKV,GAEzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GAClB,IAAM5B,EAAUqB,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAM,GACjDJ,EAAcJ,IAAapB,EAAQY,OAAOC,SAChD,OACI,sBAA0BlB,MAAO,CAACwC,MAAO,QAAzC,UACI,qBAAKnD,UAAU,gBAAf,SAEQwC,EACE,cAAC,EAAD,CAAWxB,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASU,YAAaW,EAASa,OAGhE,qBAAKlD,UAAU,gBAAgBW,MAAO,CAACW,YAAakB,EAAc,OAAS,MAAOR,WAAYQ,EAAc,MAAQ,QAApH,SACKD,EAAmBvB,EAASwB,OATrC,cAAiBI,OA2BpBQ,GACD,qBAAKzC,MAAO,CAAC0C,OAAQ,WACrB,qBAAKrD,UAAU,yBAAf,SACI,cAAC,EAAD,2BAAiBb,GAAjB,IAAwBI,OAAQ4C,UAb3B,c,iDCSNmB,EArDG,WAAO,IAAD,EACalE,mBAAS,IADtB,mBACbyC,EADa,KACH0B,EADG,OAEanE,mBAAS,IAFtB,mBAEboE,EAFa,KAEHC,EAFG,OAGMrE,mBAAS,IAHf,mBAGbsE,EAHa,KAGNC,EAHM,KAIdlE,EAAY,uCAAG,WAAOmE,GAAP,eAAAC,EAAA,6DACjBD,EAAEjE,iBAEImE,EAAa,CAAE,aAAc,uCAAwC,YAAajC,EAAU,cAAc2B,GAH/F,kBAMPO,IAAMC,IAAI,kCAAkC,CAACC,QAASH,IAN/C,OAObI,aAAaC,QAAQ,WAAYtC,GACjCqC,aAAaC,QAAQ,WAAWX,GAChCY,OAAOC,SAASC,SATH,kDAWbX,EAAS,gCAXI,0DAAH,sDAclB,OACI,qBAAK3D,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,sBACA,uBAAMC,SAAUR,EAAhB,UACI,uBACIe,KAAK,OACLnB,MAAOwC,EACP1B,SAAU,SAACyD,GAAD,OAAML,EAAYK,EAAExD,OAAOf,QACrCW,UAAU,QACVE,YAAY,WACZqE,UAAQ,IAEZ,uBACI/D,KAAK,WACLnB,MAAOmE,EACPrD,SAAU,SAACyD,GAAD,OAAMH,EAAYG,EAAExD,OAAOf,QACrCW,UAAU,QACVE,YAAY,WACZqE,UAAQ,IAEZ,qBAAKC,MAAM,SAAX,SACI,wBAAQhE,KAAK,SAASR,UAAU,SAAhC,SACI,sDAKR,oBAAIA,UAAU,QAAd,SAAuB0D,aC9B5Be,EAfH,WACR,OAAIP,aAAaQ,QAAQ,YAIrB,cAAC,IAAD,CACIrB,OAAO,QACPsB,UAAU,uCACVvC,SAAU8B,aAAaQ,QAAQ,YAC/BE,WAAYV,aAAaQ,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAiB,cAAC,EAAD,eAAcA,OATV,cAAC,EAAD,KCFjDC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.cd5dbf5c.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { sendMessage, isTyping } from 'react-chat-engine'\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\n\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('')\n    const { chatId, creds } = props\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const text = value.trim()\n\n        if(text.length>0) sendMessage(creds, chatId, { text })\n        setValue('')\n    }\n    const handleChange = (event) => {\n        setValue(event.target.value)\n        isTyping(props, chatId)\n    }\n    const handleUpload = (event) => {\n        sendMessage(creds,chatId, {files: event.target.files, text:''})\n    }\n    return (\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input \n                className=\"message-input\"\n                placeholder=\"Send a message...\"\n                value={value}\n                onChange={handleChange}\n                onSubmit={handleSubmit}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\"/> \n                </span>\n            </label>\n            <input\n                type=\"file\"\n                multiple={false}\n                id=\"upload-button\"\n                style={{display:'none'}}\n                onChange={handleUpload}\n            />\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\"/>\n            </button>\n        </form>\n    )\n}\n\nexport default MessageForm","const MyMessage = ({message}) => {\n    if(message?.attachments ?. length > 0){\n        return (\n            <img \n                src={message.attachments[0].file}\n                alt=\"message-attachment\"\n                className=\"message-image\"\n                style={{float: 'right'}}\n            />\n        )\n    }\n    return (\n        <div className=\"message\" style={{float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default MyMessage","const TheirMessage = ({lastMessage, message}) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\n\n    return (\n        <div className=\"message-row\">\n            {isFirstMessageByUser && (\n                <div \n                    className=\"message-avatar\"\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\n                />\n            )}\n            {message?.attachments ?. length > 0\n                ? (\n                    <img \n                        src={message.attachments[0].file}\n                        alt=\"message-attachment\"\n                        className=\"message-image\"\n                        style={{marginLeft: isFirstMessageByUser ? '4px':'48px'}}\n                    />\n                ) : (\n                    <div className=\"message\" style={{float: 'left', backgroundColor: '#CABCDC'}}>\n                        {message.text}\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default TheirMessage","import MessageForm from './MessageForm'\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages } = props\n\n    const chat = chats && chats[activeChat]\n\n    const renderReadReceipts = (message, isMyMessage) => {\n        return chat.people.map((person,index)=> person.last_read === message.id && (\n            <div \n                key={`read_${index}`}\n                className=\"read-receipt\"\n                style={{\n                    float: isMyMessage ? 'right' : 'left',\n                    backgroundImage: `url(${person?.person?.avatar})`\n                }}\n            />\n        ))\n    }\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages)\n\n        return keys.map((key, index)=>{\n            const message = messages[key]\n            const lastMessageKey = index === 0 ? null : keys[index-1]\n            const isMyMessage = userName === message.sender.username\n            return (\n                <div key={`msg_${index}`} style={{width: '100%'}}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage\n                            ? <MyMessage message={message}/> \n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\n                        }\n                    </div>\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>\n                </div>\n            )\n        })\n\n    }\n\n    if(!chat) return 'Loading...'\n\n    return (\n        <div className=\"chat-feed\">\n            <div className=\"chat-title-container\">\n                <div className=\"chat-title\">{chat.title}</div>\n                <div className=\"chat-subtitle\">\n                    {chat.people.map((person) => `${person.person.username}`)}\n                </div>\n            </div>\n            {renderMessages()}\n            <div style={{height: '100px'}}/>\n            <div className=\"message-form-container\">\n                <MessageForm {...props} chatId={activeChat}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatFeed","import { useState } from 'react'\nimport axios from 'axios'\n\nconst LoginForm = () => {\n    const [username, setUsername ] = useState('')\n    const [password, setPassword ] = useState('')\n    const [error, setError] = useState('')\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        //username | password => chat engine => give messages, works out=> logged in, if error => try with new username...\n        const authObject = { 'Project-ID': \"29246935-cc8e-4535-a165-6c723e014d8f\", 'User-Name': username, 'User-Secret':password}\n\n        try {\n            await axios.get('https://api.chatengine.io/chats',{headers: authObject})\n            localStorage.setItem('username', username)\n            localStorage.setItem('password',password)\n            window.location.reload()\n        } catch (error) {\n            setError('Oops, incorrect credentials.')\n        }\n    }\n    return (\n        <div className=\"wrapper\">\n            <div className=\"form\">\n                <h1 className=\"title\">Chat App</h1>\n                <form onSubmit={handleSubmit}>\n                    <input \n                        type=\"text\" \n                        value={username} \n                        onChange={(e)=> setUsername(e.target.value)} \n                        className=\"input\" \n                        placeholder=\"Username\" \n                        required \n                    />\n                    <input \n                        type=\"password\" \n                        value={password} \n                        onChange={(e)=> setPassword(e.target.value)} \n                        className=\"input\" \n                        placeholder=\"Password\" \n                        required \n                    />\n                    <div align=\"center\">\n                        <button type=\"submit\" className=\"button\">\n                            <span>\n                                Start Chatting\n                            </span>\n                        </button>\n                    </div>\n                    <h2 className=\"error\">{error}</h2>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm","import { ChatEngine } from 'react-chat-engine'\nimport ChatFeed from './components/ChatFeed.jsx'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nconst App = () => {\n    if(!localStorage.getItem('username')) return <LoginForm />\n\n\n    return (\n        <ChatEngine \n            height=\"100vh\"\n            projectID=\"29246935-cc8e-4535-a165-6c723e014d8f\"\n            userName={localStorage.getItem('username')}\n            userSecret={localStorage.getItem('password')}\n            renderChatFeed={(chatAppProps)=> <ChatFeed {...chatAppProps}/>}\n        />\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nReactDOM.render(<App />,document.getElementById('root'))\n\n"],"sourceRoot":""}